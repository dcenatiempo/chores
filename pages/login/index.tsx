import { useState } from 'react';
import {
  getAuth,
  createUserWithEmailAndPassword,
  signInWithEmailAndPassword,
} from 'firebase/auth';
import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import {
  Button,
  PasswordInput,
  Switch,
  TextInput,
} from '../../components/base';
import Header from '../../components/nav/Header';
import styles from '../../styles/Home.module.css';

const auth = getAuth();

const Login: NextPage = () => {
  const [isCreate, setIsCreate] = useState(true);
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');

  function validEmail() {
    var emailRegex = /^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/;
    console.log('validEmail', emailRegex.test(email));
    return emailRegex.test(email);
  }

  function validPassword() {
    return password.length > 8;
  }

  function passwordsMatch() {
    if (!isCreate) return true;
    return password === confirmPassword;
  }

  function validateForm() {
    if (!validEmail()) return false;
    if (!validPassword()) return false;
    if (!passwordsMatch()) return false;
    return true;
  }

  function onClickLogin() {
    console.log(email, password, confirmPassword);
    if (!validateForm()) {
      console.log('validation error');
      return;
    }
    if (isCreate) createAccount();
    else login();
  }

  function createAccount() {
    createUserWithEmailAndPassword(auth, email, password)
      .then((userCredential) => {
        // Signed in
        console.log(userCredential);
        const user = userCredential.user;
        // ...
      })
      .catch((error) => {
        console.log(error);
        const errorCode = error.code;
        const errorMessage = error.message;
        // ..
      });
  }

  function login() {
    signInWithEmailAndPassword(auth, email, password)
      .then((userCredential) => {
        // Signed in
        console.log(userCredential);
        const user = userCredential.user;
        // ...
      })
      .catch((error) => {
        console.log(error);
        const errorCode = error.code;
        const errorMessage = error.message;
      });
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />
      <Switch value={isCreate} onChange={setIsCreate} />
      <main className={styles.main}>
        <h1 className={styles.title}>Login</h1>

        <TextInput label="Email" onChange={setEmail} value={email} />
        <PasswordInput
          label="Password"
          onChange={setPassword}
          value={password}
        />
        {isCreate && (
          <>
            <PasswordInput
              errorMessage={
                password !== confirmPassword ? 'passwords need to match' : ''
              }
              label="Confirm Password"
              onChange={setConfirmPassword}
              value={confirmPassword}
            />
          </>
        )}
        <Button
          label={isCreate ? 'Create Account' : 'Login'}
          onClick={onClickLogin}
        />
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Login;
